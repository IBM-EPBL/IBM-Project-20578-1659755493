{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMEiJpkB4bpDCfOgenJTGDh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Importing of Libraries**"],"metadata":{"id":"e77-i-_XaSNt"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression"],"metadata":{"id":"SgYZ_N40aXmd","executionInfo":{"status":"ok","timestamp":1668404992803,"user_tz":-330,"elapsed":333,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}}},"execution_count":48,"outputs":[]},{"cell_type":"markdown","source":["**Dataset Loading**"],"metadata":{"id":"K-jtftNzalE2"}},{"cell_type":"code","source":["df = pd.read_csv(\"/content/abalone.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"pGMZJzUdap4u","executionInfo":{"status":"ok","timestamp":1668404993730,"user_tz":-330,"elapsed":55,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"96bd45e8-35d0-408c-f8c2-7b593f6e7f91"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Sex  Length  Diameter  Height  Whole weight  Shucked weight  \\\n","0      M   0.455     0.365   0.095        0.5140          0.2245   \n","1      M   0.350     0.265   0.090        0.2255          0.0995   \n","2      F   0.530     0.420   0.135        0.6770          0.2565   \n","3      M   0.440     0.365   0.125        0.5160          0.2155   \n","4      I   0.330     0.255   0.080        0.2050          0.0895   \n","...   ..     ...       ...     ...           ...             ...   \n","4172   F   0.565     0.450   0.165        0.8870          0.3700   \n","4173   M   0.590     0.440   0.135        0.9660          0.4390   \n","4174   M   0.600     0.475   0.205        1.1760          0.5255   \n","4175   F   0.625     0.485   0.150        1.0945          0.5310   \n","4176   M   0.710     0.555   0.195        1.9485          0.9455   \n","\n","      Viscera weight  Shell weight  Rings  \n","0             0.1010        0.1500     15  \n","1             0.0485        0.0700      7  \n","2             0.1415        0.2100      9  \n","3             0.1140        0.1550     10  \n","4             0.0395        0.0550      7  \n","...              ...           ...    ...  \n","4172          0.2390        0.2490     11  \n","4173          0.2145        0.2605     10  \n","4174          0.2875        0.3080      9  \n","4175          0.2610        0.2960     10  \n","4176          0.3765        0.4950     12  \n","\n","[4177 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-542b3952-2620-40f4-930e-ae4215297c71\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole weight</th>\n","      <th>Shucked weight</th>\n","      <th>Viscera weight</th>\n","      <th>Shell weight</th>\n","      <th>Rings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M</td>\n","      <td>0.455</td>\n","      <td>0.365</td>\n","      <td>0.095</td>\n","      <td>0.5140</td>\n","      <td>0.2245</td>\n","      <td>0.1010</td>\n","      <td>0.1500</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M</td>\n","      <td>0.350</td>\n","      <td>0.265</td>\n","      <td>0.090</td>\n","      <td>0.2255</td>\n","      <td>0.0995</td>\n","      <td>0.0485</td>\n","      <td>0.0700</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>F</td>\n","      <td>0.530</td>\n","      <td>0.420</td>\n","      <td>0.135</td>\n","      <td>0.6770</td>\n","      <td>0.2565</td>\n","      <td>0.1415</td>\n","      <td>0.2100</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M</td>\n","      <td>0.440</td>\n","      <td>0.365</td>\n","      <td>0.125</td>\n","      <td>0.5160</td>\n","      <td>0.2155</td>\n","      <td>0.1140</td>\n","      <td>0.1550</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>0.330</td>\n","      <td>0.255</td>\n","      <td>0.080</td>\n","      <td>0.2050</td>\n","      <td>0.0895</td>\n","      <td>0.0395</td>\n","      <td>0.0550</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4172</th>\n","      <td>F</td>\n","      <td>0.565</td>\n","      <td>0.450</td>\n","      <td>0.165</td>\n","      <td>0.8870</td>\n","      <td>0.3700</td>\n","      <td>0.2390</td>\n","      <td>0.2490</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4173</th>\n","      <td>M</td>\n","      <td>0.590</td>\n","      <td>0.440</td>\n","      <td>0.135</td>\n","      <td>0.9660</td>\n","      <td>0.4390</td>\n","      <td>0.2145</td>\n","      <td>0.2605</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4174</th>\n","      <td>M</td>\n","      <td>0.600</td>\n","      <td>0.475</td>\n","      <td>0.205</td>\n","      <td>1.1760</td>\n","      <td>0.5255</td>\n","      <td>0.2875</td>\n","      <td>0.3080</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>4175</th>\n","      <td>F</td>\n","      <td>0.625</td>\n","      <td>0.485</td>\n","      <td>0.150</td>\n","      <td>1.0945</td>\n","      <td>0.5310</td>\n","      <td>0.2610</td>\n","      <td>0.2960</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4176</th>\n","      <td>M</td>\n","      <td>0.710</td>\n","      <td>0.555</td>\n","      <td>0.195</td>\n","      <td>1.9485</td>\n","      <td>0.9455</td>\n","      <td>0.3765</td>\n","      <td>0.4950</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4177 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-542b3952-2620-40f4-930e-ae4215297c71')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-542b3952-2620-40f4-930e-ae4215297c71 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-542b3952-2620-40f4-930e-ae4215297c71');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["#adding age\n","df['Age'] = df.Rings + 1.5\n","\n","df=df.rename(columns = {'Whole weight':'Whole_weight','Shucked weight': 'Shucked_weight','Viscera weight': 'Viscera_weight',\n","                            'Shell weight': 'Shell_weight'})\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jGoxsaSzbdJJ","executionInfo":{"status":"ok","timestamp":1668404993731,"user_tz":-330,"elapsed":46,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"51485b3e-a9b2-4670-a22d-f0f9f301c54d"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","0      M   0.455     0.365   0.095        0.5140          0.2245   \n","1      M   0.350     0.265   0.090        0.2255          0.0995   \n","2      F   0.530     0.420   0.135        0.6770          0.2565   \n","3      M   0.440     0.365   0.125        0.5160          0.2155   \n","4      I   0.330     0.255   0.080        0.2050          0.0895   \n","...   ..     ...       ...     ...           ...             ...   \n","4172   F   0.565     0.450   0.165        0.8870          0.3700   \n","4173   M   0.590     0.440   0.135        0.9660          0.4390   \n","4174   M   0.600     0.475   0.205        1.1760          0.5255   \n","4175   F   0.625     0.485   0.150        1.0945          0.5310   \n","4176   M   0.710     0.555   0.195        1.9485          0.9455   \n","\n","      Viscera_weight  Shell_weight  Rings   Age  \n","0             0.1010        0.1500     15  16.5  \n","1             0.0485        0.0700      7   8.5  \n","2             0.1415        0.2100      9  10.5  \n","3             0.1140        0.1550     10  11.5  \n","4             0.0395        0.0550      7   8.5  \n","...              ...           ...    ...   ...  \n","4172          0.2390        0.2490     11  12.5  \n","4173          0.2145        0.2605     10  11.5  \n","4174          0.2875        0.3080      9  10.5  \n","4175          0.2610        0.2960     10  11.5  \n","4176          0.3765        0.4950     12  13.5  \n","\n","[4177 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-77dfe832-55f8-456b-afda-ff96ed1c2e64\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Rings</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M</td>\n","      <td>0.455</td>\n","      <td>0.365</td>\n","      <td>0.095</td>\n","      <td>0.5140</td>\n","      <td>0.2245</td>\n","      <td>0.1010</td>\n","      <td>0.1500</td>\n","      <td>15</td>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M</td>\n","      <td>0.350</td>\n","      <td>0.265</td>\n","      <td>0.090</td>\n","      <td>0.2255</td>\n","      <td>0.0995</td>\n","      <td>0.0485</td>\n","      <td>0.0700</td>\n","      <td>7</td>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>F</td>\n","      <td>0.530</td>\n","      <td>0.420</td>\n","      <td>0.135</td>\n","      <td>0.6770</td>\n","      <td>0.2565</td>\n","      <td>0.1415</td>\n","      <td>0.2100</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M</td>\n","      <td>0.440</td>\n","      <td>0.365</td>\n","      <td>0.125</td>\n","      <td>0.5160</td>\n","      <td>0.2155</td>\n","      <td>0.1140</td>\n","      <td>0.1550</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>I</td>\n","      <td>0.330</td>\n","      <td>0.255</td>\n","      <td>0.080</td>\n","      <td>0.2050</td>\n","      <td>0.0895</td>\n","      <td>0.0395</td>\n","      <td>0.0550</td>\n","      <td>7</td>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4172</th>\n","      <td>F</td>\n","      <td>0.565</td>\n","      <td>0.450</td>\n","      <td>0.165</td>\n","      <td>0.8870</td>\n","      <td>0.3700</td>\n","      <td>0.2390</td>\n","      <td>0.2490</td>\n","      <td>11</td>\n","      <td>12.5</td>\n","    </tr>\n","    <tr>\n","      <th>4173</th>\n","      <td>M</td>\n","      <td>0.590</td>\n","      <td>0.440</td>\n","      <td>0.135</td>\n","      <td>0.9660</td>\n","      <td>0.4390</td>\n","      <td>0.2145</td>\n","      <td>0.2605</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4174</th>\n","      <td>M</td>\n","      <td>0.600</td>\n","      <td>0.475</td>\n","      <td>0.205</td>\n","      <td>1.1760</td>\n","      <td>0.5255</td>\n","      <td>0.2875</td>\n","      <td>0.3080</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>4175</th>\n","      <td>F</td>\n","      <td>0.625</td>\n","      <td>0.485</td>\n","      <td>0.150</td>\n","      <td>1.0945</td>\n","      <td>0.5310</td>\n","      <td>0.2610</td>\n","      <td>0.2960</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4176</th>\n","      <td>M</td>\n","      <td>0.710</td>\n","      <td>0.555</td>\n","      <td>0.195</td>\n","      <td>1.9485</td>\n","      <td>0.9455</td>\n","      <td>0.3765</td>\n","      <td>0.4950</td>\n","      <td>12</td>\n","      <td>13.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4177 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77dfe832-55f8-456b-afda-ff96ed1c2e64')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-77dfe832-55f8-456b-afda-ff96ed1c2e64 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-77dfe832-55f8-456b-afda-ff96ed1c2e64');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XhYKwjFdbsxc","executionInfo":{"status":"ok","timestamp":1668404993731,"user_tz":-330,"elapsed":43,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"82f62351-5e34-44c2-d16b-e2c23ac7c269"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4177, 10)"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["**Visualization**"],"metadata":{"id":"FQTlxOeybvDV"}},{"cell_type":"code","source":["#univarient analysis\n","\n","df.groupby('Sex')[['Length', 'Diameter', 'Height', 'Whole_weight', 'Shucked_weight',\n","       'Viscera_weight', 'Shell_weight', 'Age']].mean().sort_values('Age')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"aBp2RakSbycs","executionInfo":{"status":"ok","timestamp":1668404993732,"user_tz":-330,"elapsed":32,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"7f3da844-4101-45f6-cfe7-61ec7c766ec8"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Length  Diameter    Height  Whole_weight  Shucked_weight  \\\n","Sex                                                               \n","I    0.427746  0.326494  0.107996      0.431363        0.191035   \n","M    0.561391  0.439287  0.151381      0.991459        0.432946   \n","F    0.579093  0.454732  0.158011      1.046532        0.446188   \n","\n","     Viscera_weight  Shell_weight        Age  \n","Sex                                           \n","I          0.092010      0.128182   9.390462  \n","M          0.215545      0.281969  12.205497  \n","F          0.230689      0.302010  12.629304  "],"text/html":["\n","  <div id=\"df-5bc5b947-d7d9-475a-9fd7-1d91abe8e824\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Age</th>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>I</th>\n","      <td>0.427746</td>\n","      <td>0.326494</td>\n","      <td>0.107996</td>\n","      <td>0.431363</td>\n","      <td>0.191035</td>\n","      <td>0.092010</td>\n","      <td>0.128182</td>\n","      <td>9.390462</td>\n","    </tr>\n","    <tr>\n","      <th>M</th>\n","      <td>0.561391</td>\n","      <td>0.439287</td>\n","      <td>0.151381</td>\n","      <td>0.991459</td>\n","      <td>0.432946</td>\n","      <td>0.215545</td>\n","      <td>0.281969</td>\n","      <td>12.205497</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>0.579093</td>\n","      <td>0.454732</td>\n","      <td>0.158011</td>\n","      <td>1.046532</td>\n","      <td>0.446188</td>\n","      <td>0.230689</td>\n","      <td>0.302010</td>\n","      <td>12.629304</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5bc5b947-d7d9-475a-9fd7-1d91abe8e824')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5bc5b947-d7d9-475a-9fd7-1d91abe8e824 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5bc5b947-d7d9-475a-9fd7-1d91abe8e824');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["#boxplot\n","\n","sns.boxplot(x=df.Age,color='orange') "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"Q-YlrMc7b_KX","executionInfo":{"status":"ok","timestamp":1668404993734,"user_tz":-330,"elapsed":30,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"597e35a9-565a-4b0e-ff68-36c6ca7fa65f"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe456598810>"]},"metadata":{},"execution_count":53},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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7PP5VFlZGfUh4iH4nNAtzzS7Lp3S6hmDfxnN9h96P8oPZW0ktv+QrZGZua75+5LccW/xYArVTv4pMgAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYCTFeoB4mTNnjvUIiBHuLdzqgQlwXl6e9QiIEe4t3IpHEABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGEmxHgADa7k6Utt/yB503Z9XR0rSkNZG+vqTMqP6LgH0Q4CHoZycnCGvTR/ZLkkamZYW1RkmZUY2B4DIEeBhaMWKFdYjAIgDngEDgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYIQAA4ARAgwARggwABghwABghAADgBECDABGCDAAGCHAAGCEAAOAEQIMAEYIMAAYIcAAYCSiH8rZ0tIin88Xq1mipr29XWlR/inBw0Gi7ktK3L2xL/eJxd5aWloG/gMnAS1cuNB6hJhI1H05TuLujX25Tzz3xiMIADBCgAHASPKnn376qfUQsfDss89ajxATibovKXH3xr7cJ1578ziO48TllQAAffAIAgCMEGAAMBLR1wG7QV5enkaNGqWkpCQlJyersrLSeqR7UlJSouPHjys9PV3V1dWSpI6ODq1du1YtLS3KyspSWVmZxo4dazxp5Aba25dffqlvvvlG48aNkyQVFxfrpZdeshwzYpcuXdKHH36o1tZWeTwevf7661q+fLnr71uofbn9nv3zzz9aunSpbt26pe7ubs2bN09FRUVqbm5WcXGxOjo6NG3aNG3dulUjRoyIzRBx+4K3OJk5c6bT2tpqPcZ9q6+vdxoaGpxXXnnlzts+++wzZ8eOHY7jOM6OHTucrVu3Wo13XwbaW3l5ufP1118bTnX/Ll++7DQ0NDiO4zjXrl1z5s6d65w7d8719y3Uvtx+z3p6epzr1687juM4t27dcl577TXn9OnTTlFRkVNdXe04juN88sknzp49e2I2A48ghqkXX3zxf05JdXV1WrBggSRpwYIFqq2ttRjtvg20t0SQkZGhadOmSZJGjx6tnJwcXb582fX3LdS+3M7j8WjUqFGSpEAgoEAgII/Ho5MnT2revHmSpIULF6quri5mMyRkgN9++235fD7t27fPepSoam1tVUZGhiRp/Pjxam1tNZ4ouvbs2SOv16uSkhJdvXrVepz78ueff+r333/X888/n1D37e59Se6/Z93d3SooKND06dM1ffp0TZw4UWPGjFFKSu/T2UcffTSmH2wSLsB79+7VgQMHtHPnTu3Zs0c///yz9Ugx4fF45PF4rMeImjfeeEM1NTWqqqpSRkaGtmzZYj3SPbtx44aKior00UcfafTo0X3+zM33rf++EuGeJScnq6qqSidOnNDZs2fl9/vj+voJF+AJEyZIktLT0zVnzhydPXvWeKLoSU9P15UrVyRJV65cufPJj0TwyCOPKDk5WUlJSSosLNSvv/5qPdI9uX37toqKiuT1ejV37lxJiXHfBtpXotwzSRozZoxyc3N15swZdXZ2KhAISJL++uuvO02JhYQK8M2bN3X9+vU7v//xxx81efJk46miJy8vTwcPHpQkHTx4ULNmzTKeKHqCgZKk2tpaV943x3H08ccfKycnR2+99dadt7v9voXal9vvWVtbmzo7OyVJXV1d+umnnzRp0iTl5ubq8OHDkqQDBw4oLy8vZjMk1L+Ea25u1rvvviup99nOq6++qlWrVhlPdW+Ki4tVX1+v9vZ2paen6/3339fs2bO1Zs0aXbp0SY899pjKysqUmppqPWrEBtpbfX29GhsbJUlZWVnauHHjneembvHLL79o6dKlmjJlipKSes82xcXFeu6551x930Ltq7q62tX3rLGxURs2bFB3d7ccx1F+fr7ee+89NTc3a+3atbp69aqeeeYZlZaWxuzL0BIqwADgJgn1CAIA3IQAA4ARAgwARggwABghwABghADDFWpra/XUU0/p/Pnz1qMAUUOA4QrV1dV64YUXdOjQIetRgKjh64Ax7N24cUP5+fnavXu3Vq5cqcOHD6unp0cbN27UyZMnlZmZqZSUFC1atEj5+flqaGjQli1bdPPmTaWlpWnz5s2u+gcCeHBwAsawV1dXpxkzZig7O1tpaWlqaGjQkSNH1NLSou+//15bt27VmTNnJPV+z4JNmzapvLxclZWVWrRokbZt22a8A2BgCfcTMZB4Dh06pGXLlkmS5s+fr0OHDikQCCg/P19JSUkaP368cnNzJUkXLlxQU1PTne9Z0NPTo/Hjx5vNDoRDgDGsdXR06OTJk2pqapLH41F3d7c8Ho9mz5494HrHcTR58uSE+17QSEw8gsCwdvjwYRUUFOjYsWM6evSoTpw4occff1ypqak6cuSIenp69Pfff6u+vl6SlJ2drba2Np0+fVpS7yOJc+fOWW4BCIkTMIa16upqrVixos/b5s6dq/Pnz2vChAmaP3++MjMzNXXqVD388MMaMWKEysvLtWnTJl27dk3d3d1avny5675VIh4MfBUEXOvGjRsaNWqU2tvbVVhYqL179/K8F67CCRiutXLlSnV2dur27dt65513iC9chxMwABjhk3AAYIQAA4ARAgwARggwABghwABg5D9fG++q48WYlwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.hist(df['Sex'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"id":"zYiFWjqzcL0Q","executionInfo":{"status":"ok","timestamp":1668404994710,"user_tz":-330,"elapsed":1000,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"4bb425c0-63ce-4266-8f2e-a31b12c501ae"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([1528.,    0.,    0.,    0.,    0., 1307.,    0.,    0.,    0.,\n","        1342.]),\n"," array([0. , 0.2, 0.4, 0.6, 0.8, 1. , 1.2, 1.4, 1.6, 1.8, 2. ]),\n"," <a list of 10 Patch objects>)"]},"metadata":{},"execution_count":54},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.histplot(x=df.Diameter,palette='Rainbow') "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"CkvznxC_cYsm","executionInfo":{"status":"ok","timestamp":1668404994711,"user_tz":-330,"elapsed":49,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"a4fa95d4-b406-4719-e2e2-f5fcff9d6e06"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe45a5fe690>"]},"metadata":{},"execution_count":55},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#bi-varient analysis\n","#boxplot\n","\n","sns.boxplot(x=df.Sex,y=df.Diameter,data=df) \n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"lbbVOgY9coYW","executionInfo":{"status":"ok","timestamp":1668404994712,"user_tz":-330,"elapsed":39,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"f36082c3-9336-4ba8-a137-dca39c9fd8ea"},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#scatter plot\n","\n","plt.scatter(df.Viscera_weight,df.Shell_weight)\n","plt.xlabel(\"Viscera_weight\")\n","plt.ylabel(\"Shell_weight\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"_it01Gt6dL2T","executionInfo":{"status":"ok","timestamp":1668404994713,"user_tz":-330,"elapsed":37,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"756a1f7b-b9cf-4d58-9204-4694b8e80e1f"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Shell_weight')"]},"metadata":{},"execution_count":57},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Multi-varient analysis\n","\n","sns.pairplot (df, hue=\"Sex\", size=3)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1JTRHvc-U2O0_Jlx_566-QuM9yIN_e_eI"},"id":"nGzIW3h_dygw","executionInfo":{"status":"ok","timestamp":1668405036732,"user_tz":-330,"elapsed":42047,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"b5ecc970-641e-4327-edc3-d1ad79aa7fa3"},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["#heatmap\n","\n","x = df.corr()\n","sns.heatmap(x,xticklabels=x.columns,yticklabels=x.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":357},"id":"NxfDpPLeeI9E","executionInfo":{"status":"ok","timestamp":1668405036735,"user_tz":-330,"elapsed":105,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"08914cda-3e64-4319-d235-55d347ec9f55"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe459e6d210>"]},"metadata":{},"execution_count":59},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Statistics**"],"metadata":{"id":"9ACniRoWeYC-"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"3TIir5KVea7s","executionInfo":{"status":"ok","timestamp":1668407102456,"user_tz":-330,"elapsed":383,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"900a4ab0-c1da-4fb9-ae95-fd0148b5618c"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Sex       Length     Diameter       Height  Whole_weight  \\\n","count  4177.000000  4177.000000  4177.000000  4177.000000   4177.000000   \n","mean      1.052909     0.523992     0.407881     0.139516      0.828742   \n","std       0.822240     0.120093     0.099240     0.041827      0.490389   \n","min       0.000000     0.075000     0.055000     0.000000      0.002000   \n","25%       0.000000     0.450000     0.350000     0.115000      0.441500   \n","50%       1.000000     0.545000     0.425000     0.140000      0.799500   \n","75%       2.000000     0.615000     0.480000     0.165000      1.153000   \n","max       2.000000     0.815000     0.650000     1.130000      2.825500   \n","\n","       Shucked_weight  Viscera_weight  Shell_weight        Rings          Age  \n","count     4177.000000     4177.000000   4177.000000  4177.000000  4177.000000  \n","mean         0.359367        0.180594      0.238831     9.933684    11.444577  \n","std          0.221963        0.109614      0.139203     3.224169     3.204419  \n","min          0.001000        0.000500      0.001500     1.000000     5.500000  \n","25%          0.186000        0.093500      0.130000     8.000000     9.500000  \n","50%          0.336000        0.171000      0.234000     9.000000    10.500000  \n","75%          0.502000        0.253000      0.329000    11.000000    12.500000  \n","max          1.488000        0.760000      1.005000    29.000000    30.500000  "],"text/html":["\n","  <div id=\"df-9647c01f-b401-40c6-8243-6e4ef52b5e47\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Rings</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","      <td>4177.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.052909</td>\n","      <td>0.523992</td>\n","      <td>0.407881</td>\n","      <td>0.139516</td>\n","      <td>0.828742</td>\n","      <td>0.359367</td>\n","      <td>0.180594</td>\n","      <td>0.238831</td>\n","      <td>9.933684</td>\n","      <td>11.444577</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.822240</td>\n","      <td>0.120093</td>\n","      <td>0.099240</td>\n","      <td>0.041827</td>\n","      <td>0.490389</td>\n","      <td>0.221963</td>\n","      <td>0.109614</td>\n","      <td>0.139203</td>\n","      <td>3.224169</td>\n","      <td>3.204419</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.075000</td>\n","      <td>0.055000</td>\n","      <td>0.000000</td>\n","      <td>0.002000</td>\n","      <td>0.001000</td>\n","      <td>0.000500</td>\n","      <td>0.001500</td>\n","      <td>1.000000</td>\n","      <td>5.500000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.450000</td>\n","      <td>0.350000</td>\n","      <td>0.115000</td>\n","      <td>0.441500</td>\n","      <td>0.186000</td>\n","      <td>0.093500</td>\n","      <td>0.130000</td>\n","      <td>8.000000</td>\n","      <td>9.500000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>0.545000</td>\n","      <td>0.425000</td>\n","      <td>0.140000</td>\n","      <td>0.799500</td>\n","      <td>0.336000</td>\n","      <td>0.171000</td>\n","      <td>0.234000</td>\n","      <td>9.000000</td>\n","      <td>10.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>0.615000</td>\n","      <td>0.480000</td>\n","      <td>0.165000</td>\n","      <td>1.153000</td>\n","      <td>0.502000</td>\n","      <td>0.253000</td>\n","      <td>0.329000</td>\n","      <td>11.000000</td>\n","      <td>12.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.000000</td>\n","      <td>0.815000</td>\n","      <td>0.650000</td>\n","      <td>1.130000</td>\n","      <td>2.825500</td>\n","      <td>1.488000</td>\n","      <td>0.760000</td>\n","      <td>1.005000</td>\n","      <td>29.000000</td>\n","      <td>30.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9647c01f-b401-40c6-8243-6e4ef52b5e47')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9647c01f-b401-40c6-8243-6e4ef52b5e47 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9647c01f-b401-40c6-8243-6e4ef52b5e47');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["df.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CS2Jeylweee7","executionInfo":{"status":"ok","timestamp":1668407234324,"user_tz":-330,"elapsed":364,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"b274ae0b-c0dc-44c2-e781-37008349568b"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex                1.052909\n","Length             0.523992\n","Diameter           0.407881\n","Height             0.139516\n","Whole_weight       0.828742\n","Shucked_weight     0.359367\n","Viscera_weight     0.180594\n","Shell_weight       0.238831\n","Rings              9.933684\n","Age               11.444577\n","dtype: float64"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["df.mode()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"nWDAJrLmehFc","executionInfo":{"status":"ok","timestamp":1668407242232,"user_tz":-330,"elapsed":1045,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"7dcd7c6d-14eb-40d2-fda7-4890b3ecae87"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","0  2.0   0.550      0.45    0.15        0.2225           0.175   \n","1  NaN   0.625       NaN     NaN           NaN             NaN   \n","\n","   Viscera_weight  Shell_weight  Rings   Age  \n","0          0.1715         0.275    9.0  10.5  \n","1             NaN           NaN    NaN   NaN  "],"text/html":["\n","  <div id=\"df-9423e9be-8b95-4e46-b479-b77a6e8ab9d1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Rings</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.0</td>\n","      <td>0.550</td>\n","      <td>0.45</td>\n","      <td>0.15</td>\n","      <td>0.2225</td>\n","      <td>0.175</td>\n","      <td>0.1715</td>\n","      <td>0.275</td>\n","      <td>9.0</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>0.625</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9423e9be-8b95-4e46-b479-b77a6e8ab9d1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9423e9be-8b95-4e46-b479-b77a6e8ab9d1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9423e9be-8b95-4e46-b479-b77a6e8ab9d1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["df.median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0V1590xVeksR","executionInfo":{"status":"ok","timestamp":1668407250015,"user_tz":-330,"elapsed":467,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"84b4e49f-3854-43a6-9bd5-e7106ab2d2ea"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex                1.0000\n","Length             0.5450\n","Diameter           0.4250\n","Height             0.1400\n","Whole_weight       0.7995\n","Shucked_weight     0.3360\n","Viscera_weight     0.1710\n","Shell_weight       0.2340\n","Rings              9.0000\n","Age               10.5000\n","dtype: float64"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["#Checking of Null values\n","\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"76o0zj8Btmbn","executionInfo":{"status":"ok","timestamp":1668405444889,"user_tz":-330,"elapsed":4,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"f7118852-5c1b-4c30-f7e0-04918eec2741"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex               0\n","Length            0\n","Diameter          0\n","Height            0\n","Whole_weight      0\n","Shucked_weight    0\n","Viscera_weight    0\n","Shell_weight      0\n","Rings             0\n","Age               0\n","dtype: int64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["#Encoding\n","\n","from sklearn.preprocessing import LabelEncoder\n","encode = LabelEncoder()\n","df.Sex = encode.fit_transform(df.Sex)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"mjpNIdtaetWL","executionInfo":{"status":"ok","timestamp":1668405036745,"user_tz":-330,"elapsed":73,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"4a1d6c6e-c2b8-4db8-f6c8-aef93a1078e6"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","0       2   0.455     0.365   0.095        0.5140          0.2245   \n","1       2   0.350     0.265   0.090        0.2255          0.0995   \n","2       0   0.530     0.420   0.135        0.6770          0.2565   \n","3       2   0.440     0.365   0.125        0.5160          0.2155   \n","4       1   0.330     0.255   0.080        0.2050          0.0895   \n","...   ...     ...       ...     ...           ...             ...   \n","4172    0   0.565     0.450   0.165        0.8870          0.3700   \n","4173    2   0.590     0.440   0.135        0.9660          0.4390   \n","4174    2   0.600     0.475   0.205        1.1760          0.5255   \n","4175    0   0.625     0.485   0.150        1.0945          0.5310   \n","4176    2   0.710     0.555   0.195        1.9485          0.9455   \n","\n","      Viscera_weight  Shell_weight  Rings   Age  \n","0             0.1010        0.1500     15  16.5  \n","1             0.0485        0.0700      7   8.5  \n","2             0.1415        0.2100      9  10.5  \n","3             0.1140        0.1550     10  11.5  \n","4             0.0395        0.0550      7   8.5  \n","...              ...           ...    ...   ...  \n","4172          0.2390        0.2490     11  12.5  \n","4173          0.2145        0.2605     10  11.5  \n","4174          0.2875        0.3080      9  10.5  \n","4175          0.2610        0.2960     10  11.5  \n","4176          0.3765        0.4950     12  13.5  \n","\n","[4177 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-8231aeb6-5dd8-4574-927c-2db1edfd89d8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Rings</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>0.455</td>\n","      <td>0.365</td>\n","      <td>0.095</td>\n","      <td>0.5140</td>\n","      <td>0.2245</td>\n","      <td>0.1010</td>\n","      <td>0.1500</td>\n","      <td>15</td>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.350</td>\n","      <td>0.265</td>\n","      <td>0.090</td>\n","      <td>0.2255</td>\n","      <td>0.0995</td>\n","      <td>0.0485</td>\n","      <td>0.0700</td>\n","      <td>7</td>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.530</td>\n","      <td>0.420</td>\n","      <td>0.135</td>\n","      <td>0.6770</td>\n","      <td>0.2565</td>\n","      <td>0.1415</td>\n","      <td>0.2100</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0.440</td>\n","      <td>0.365</td>\n","      <td>0.125</td>\n","      <td>0.5160</td>\n","      <td>0.2155</td>\n","      <td>0.1140</td>\n","      <td>0.1550</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.330</td>\n","      <td>0.255</td>\n","      <td>0.080</td>\n","      <td>0.2050</td>\n","      <td>0.0895</td>\n","      <td>0.0395</td>\n","      <td>0.0550</td>\n","      <td>7</td>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4172</th>\n","      <td>0</td>\n","      <td>0.565</td>\n","      <td>0.450</td>\n","      <td>0.165</td>\n","      <td>0.8870</td>\n","      <td>0.3700</td>\n","      <td>0.2390</td>\n","      <td>0.2490</td>\n","      <td>11</td>\n","      <td>12.5</td>\n","    </tr>\n","    <tr>\n","      <th>4173</th>\n","      <td>2</td>\n","      <td>0.590</td>\n","      <td>0.440</td>\n","      <td>0.135</td>\n","      <td>0.9660</td>\n","      <td>0.4390</td>\n","      <td>0.2145</td>\n","      <td>0.2605</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4174</th>\n","      <td>2</td>\n","      <td>0.600</td>\n","      <td>0.475</td>\n","      <td>0.205</td>\n","      <td>1.1760</td>\n","      <td>0.5255</td>\n","      <td>0.2875</td>\n","      <td>0.3080</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>4175</th>\n","      <td>0</td>\n","      <td>0.625</td>\n","      <td>0.485</td>\n","      <td>0.150</td>\n","      <td>1.0945</td>\n","      <td>0.5310</td>\n","      <td>0.2610</td>\n","      <td>0.2960</td>\n","      <td>10</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4176</th>\n","      <td>2</td>\n","      <td>0.710</td>\n","      <td>0.555</td>\n","      <td>0.195</td>\n","      <td>1.9485</td>\n","      <td>0.9455</td>\n","      <td>0.3765</td>\n","      <td>0.4950</td>\n","      <td>12</td>\n","      <td>13.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4177 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8231aeb6-5dd8-4574-927c-2db1edfd89d8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8231aeb6-5dd8-4574-927c-2db1edfd89d8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8231aeb6-5dd8-4574-927c-2db1edfd89d8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["**Independent and dependent variables**"],"metadata":{"id":"PxqsAc4JexKD"}},{"cell_type":"code","source":["x=df.iloc[:,:8]"],"metadata":{"id":"EN5HMKFle7nS","executionInfo":{"status":"ok","timestamp":1668405036746,"user_tz":-330,"elapsed":72,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["print(\"Independent variable\")\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"KtfC7c36fGOx","executionInfo":{"status":"ok","timestamp":1668405037384,"user_tz":-330,"elapsed":709,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"5632e58c-6ac2-4b84-b991-df2368abc8ff"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["Independent variable\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","0       2   0.455     0.365   0.095        0.5140          0.2245   \n","1       2   0.350     0.265   0.090        0.2255          0.0995   \n","2       0   0.530     0.420   0.135        0.6770          0.2565   \n","3       2   0.440     0.365   0.125        0.5160          0.2155   \n","4       1   0.330     0.255   0.080        0.2050          0.0895   \n","...   ...     ...       ...     ...           ...             ...   \n","4172    0   0.565     0.450   0.165        0.8870          0.3700   \n","4173    2   0.590     0.440   0.135        0.9660          0.4390   \n","4174    2   0.600     0.475   0.205        1.1760          0.5255   \n","4175    0   0.625     0.485   0.150        1.0945          0.5310   \n","4176    2   0.710     0.555   0.195        1.9485          0.9455   \n","\n","      Viscera_weight  Shell_weight  \n","0             0.1010        0.1500  \n","1             0.0485        0.0700  \n","2             0.1415        0.2100  \n","3             0.1140        0.1550  \n","4             0.0395        0.0550  \n","...              ...           ...  \n","4172          0.2390        0.2490  \n","4173          0.2145        0.2605  \n","4174          0.2875        0.3080  \n","4175          0.2610        0.2960  \n","4176          0.3765        0.4950  \n","\n","[4177 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-58c59884-9a99-4372-873f-7890a40e4906\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>0.455</td>\n","      <td>0.365</td>\n","      <td>0.095</td>\n","      <td>0.5140</td>\n","      <td>0.2245</td>\n","      <td>0.1010</td>\n","      <td>0.1500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.350</td>\n","      <td>0.265</td>\n","      <td>0.090</td>\n","      <td>0.2255</td>\n","      <td>0.0995</td>\n","      <td>0.0485</td>\n","      <td>0.0700</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.530</td>\n","      <td>0.420</td>\n","      <td>0.135</td>\n","      <td>0.6770</td>\n","      <td>0.2565</td>\n","      <td>0.1415</td>\n","      <td>0.2100</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0.440</td>\n","      <td>0.365</td>\n","      <td>0.125</td>\n","      <td>0.5160</td>\n","      <td>0.2155</td>\n","      <td>0.1140</td>\n","      <td>0.1550</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.330</td>\n","      <td>0.255</td>\n","      <td>0.080</td>\n","      <td>0.2050</td>\n","      <td>0.0895</td>\n","      <td>0.0395</td>\n","      <td>0.0550</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4172</th>\n","      <td>0</td>\n","      <td>0.565</td>\n","      <td>0.450</td>\n","      <td>0.165</td>\n","      <td>0.8870</td>\n","      <td>0.3700</td>\n","      <td>0.2390</td>\n","      <td>0.2490</td>\n","    </tr>\n","    <tr>\n","      <th>4173</th>\n","      <td>2</td>\n","      <td>0.590</td>\n","      <td>0.440</td>\n","      <td>0.135</td>\n","      <td>0.9660</td>\n","      <td>0.4390</td>\n","      <td>0.2145</td>\n","      <td>0.2605</td>\n","    </tr>\n","    <tr>\n","      <th>4174</th>\n","      <td>2</td>\n","      <td>0.600</td>\n","      <td>0.475</td>\n","      <td>0.205</td>\n","      <td>1.1760</td>\n","      <td>0.5255</td>\n","      <td>0.2875</td>\n","      <td>0.3080</td>\n","    </tr>\n","    <tr>\n","      <th>4175</th>\n","      <td>0</td>\n","      <td>0.625</td>\n","      <td>0.485</td>\n","      <td>0.150</td>\n","      <td>1.0945</td>\n","      <td>0.5310</td>\n","      <td>0.2610</td>\n","      <td>0.2960</td>\n","    </tr>\n","    <tr>\n","      <th>4176</th>\n","      <td>2</td>\n","      <td>0.710</td>\n","      <td>0.555</td>\n","      <td>0.195</td>\n","      <td>1.9485</td>\n","      <td>0.9455</td>\n","      <td>0.3765</td>\n","      <td>0.4950</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4177 rows Ã— 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58c59884-9a99-4372-873f-7890a40e4906')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-58c59884-9a99-4372-873f-7890a40e4906 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-58c59884-9a99-4372-873f-7890a40e4906');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["y=df.iloc[:,9:]"],"metadata":{"id":"X_G21Z4BfIBo","executionInfo":{"status":"ok","timestamp":1668405037385,"user_tz":-330,"elapsed":65,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["print(\"Dependent variable\")\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"IXM6mq63fOsL","executionInfo":{"status":"ok","timestamp":1668405037386,"user_tz":-330,"elapsed":64,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"301c5cee-74ba-4514-aac6-f2255067de94"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["Dependent variable\n"]},{"output_type":"execute_result","data":{"text/plain":["       Age\n","0     16.5\n","1      8.5\n","2     10.5\n","3     11.5\n","4      8.5\n","...    ...\n","4172  12.5\n","4173  11.5\n","4174  10.5\n","4175  11.5\n","4176  13.5\n","\n","[4177 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-ccfcaf18-7915-4a85-aed5-52a70ea1fcf5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4172</th>\n","      <td>12.5</td>\n","    </tr>\n","    <tr>\n","      <th>4173</th>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4174</th>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>4175</th>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>4176</th>\n","      <td>13.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4177 rows Ã— 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccfcaf18-7915-4a85-aed5-52a70ea1fcf5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ccfcaf18-7915-4a85-aed5-52a70ea1fcf5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ccfcaf18-7915-4a85-aed5-52a70ea1fcf5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["**Handling of outliers**"],"metadata":{"id":"_kmveQp4feJu"}},{"cell_type":"code","source":["outliers=df.quantile(q=(0.25,0.75))\n","outliers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"1EwNXQpsfiGF","executionInfo":{"status":"ok","timestamp":1668405037387,"user_tz":-330,"elapsed":58,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"9dfa8c36-509b-4051-9dab-285a37afd38f"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","0.25  0.0   0.450      0.35   0.115        0.4415           0.186   \n","0.75  2.0   0.615      0.48   0.165        1.1530           0.502   \n","\n","      Viscera_weight  Shell_weight  Rings   Age  \n","0.25          0.0935         0.130    8.0   9.5  \n","0.75          0.2530         0.329   11.0  12.5  "],"text/html":["\n","  <div id=\"df-3c46debf-c382-48fe-86e3-eda110bd0a1b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","      <th>Rings</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.25</th>\n","      <td>0.0</td>\n","      <td>0.450</td>\n","      <td>0.35</td>\n","      <td>0.115</td>\n","      <td>0.4415</td>\n","      <td>0.186</td>\n","      <td>0.0935</td>\n","      <td>0.130</td>\n","      <td>8.0</td>\n","      <td>9.5</td>\n","    </tr>\n","    <tr>\n","      <th>0.75</th>\n","      <td>2.0</td>\n","      <td>0.615</td>\n","      <td>0.48</td>\n","      <td>0.165</td>\n","      <td>1.1530</td>\n","      <td>0.502</td>\n","      <td>0.2530</td>\n","      <td>0.329</td>\n","      <td>11.0</td>\n","      <td>12.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c46debf-c382-48fe-86e3-eda110bd0a1b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3c46debf-c382-48fe-86e3-eda110bd0a1b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3c46debf-c382-48fe-86e3-eda110bd0a1b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["a=df.Age.quantile(0.25)\n","b=df.Age.quantile(0.75)\n","c=b-a\n","lower_limit = a-1.5*c\n","df.median(numeric_only=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0kB-5stmfqV0","executionInfo":{"status":"ok","timestamp":1668405037388,"user_tz":-330,"elapsed":57,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"447ff94f-dd14-43c6-df67-fd14cffa33cd"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex                1.0000\n","Length             0.5450\n","Diameter           0.4250\n","Height             0.1400\n","Whole_weight       0.7995\n","Shucked_weight     0.3360\n","Viscera_weight     0.1710\n","Shell_weight       0.2340\n","Rings              9.0000\n","Age               10.5000\n","dtype: float64"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["df['Age'] = np.where(df['Age'] < lower_limit, 7, df['Age'])\n","sns.boxplot(x=df.Age,showfliers = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"O6VYpOBhf-My","executionInfo":{"status":"ok","timestamp":1668405037390,"user_tz":-330,"elapsed":56,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"1e9e5d16-02de-40c6-ea84-cd72445c470c"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe4513ba890>"]},"metadata":{},"execution_count":71},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Feature Scaling**"],"metadata":{"id":"6dPWrkBwgDka"}},{"cell_type":"code","source":["from sklearn import preprocessing\n","standardisation = preprocessing.StandardScaler()\n","new_x = standardisation.fit_transform(x)\n","print(new_x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xBNjpqJPgGl0","executionInfo":{"status":"ok","timestamp":1668405037392,"user_tz":-330,"elapsed":53,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"d66df387-fb71-4b93-8503-ce25617c17b8"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1.15198011 -0.57455813 -0.43214879 ... -0.60768536 -0.72621157\n","  -0.63821689]\n"," [ 1.15198011 -1.44898585 -1.439929   ... -1.17090984 -1.20522124\n","  -1.21298732]\n"," [-1.28068972  0.05003309  0.12213032 ... -0.4634999  -0.35668983\n","  -0.20713907]\n"," ...\n"," [ 1.15198011  0.6329849   0.67640943 ...  0.74855917  0.97541324\n","   0.49695471]\n"," [-1.28068972  0.84118198  0.77718745 ...  0.77334105  0.73362741\n","   0.41073914]\n"," [ 1.15198011  1.54905203  1.48263359 ...  2.64099341  1.78744868\n","   1.84048058]]\n"]}]},{"cell_type":"markdown","source":["**Splitting the data**\n","*training and testing*"],"metadata":{"id":"OZgFQ2mbgPgR"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y)"],"metadata":{"id":"LsetKKYWgV9x","executionInfo":{"status":"ok","timestamp":1668405037395,"user_tz":-330,"elapsed":53,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}}},"execution_count":73,"outputs":[]},{"cell_type":"markdown","source":["**Building the model**"],"metadata":{"id":"8ScgjxAtgo-B"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","mlr=LinearRegression()\n","mlr.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OGqFdXbEgsu5","executionInfo":{"status":"ok","timestamp":1668405037397,"user_tz":-330,"elapsed":55,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"1dd58073-315f-457c-b02a-452c8d1c02c5"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["#training and testing\n","\n","x_test[0:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"i27v9uchgwG6","executionInfo":{"status":"ok","timestamp":1668405037398,"user_tz":-330,"elapsed":52,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"074faa29-52aa-48c5-9f62-ca302bfd0aca"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sex  Length  Diameter  Height  Whole_weight  Shucked_weight  \\\n","1957    0   0.645     0.520   0.210        1.5535          0.6160   \n","1238    1   0.375     0.280   0.080        0.2025          0.0825   \n","3277    0   0.465     0.390   0.140        0.5555          0.2130   \n","2111    1   0.455     0.355   0.080        0.4520          0.2165   \n","2649    2   0.505     0.400   0.135        0.7230          0.3770   \n","\n","      Viscera_weight  Shell_weight  \n","1957          0.3655         0.474  \n","1238          0.0480         0.065  \n","3277          0.1075         0.215  \n","2111          0.0995         0.125  \n","2649          0.1490         0.178  "],"text/html":["\n","  <div id=\"df-807adb1f-af48-442b-a43f-d2aafd772162\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole_weight</th>\n","      <th>Shucked_weight</th>\n","      <th>Viscera_weight</th>\n","      <th>Shell_weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1957</th>\n","      <td>0</td>\n","      <td>0.645</td>\n","      <td>0.520</td>\n","      <td>0.210</td>\n","      <td>1.5535</td>\n","      <td>0.6160</td>\n","      <td>0.3655</td>\n","      <td>0.474</td>\n","    </tr>\n","    <tr>\n","      <th>1238</th>\n","      <td>1</td>\n","      <td>0.375</td>\n","      <td>0.280</td>\n","      <td>0.080</td>\n","      <td>0.2025</td>\n","      <td>0.0825</td>\n","      <td>0.0480</td>\n","      <td>0.065</td>\n","    </tr>\n","    <tr>\n","      <th>3277</th>\n","      <td>0</td>\n","      <td>0.465</td>\n","      <td>0.390</td>\n","      <td>0.140</td>\n","      <td>0.5555</td>\n","      <td>0.2130</td>\n","      <td>0.1075</td>\n","      <td>0.215</td>\n","    </tr>\n","    <tr>\n","      <th>2111</th>\n","      <td>1</td>\n","      <td>0.455</td>\n","      <td>0.355</td>\n","      <td>0.080</td>\n","      <td>0.4520</td>\n","      <td>0.2165</td>\n","      <td>0.0995</td>\n","      <td>0.125</td>\n","    </tr>\n","    <tr>\n","      <th>2649</th>\n","      <td>2</td>\n","      <td>0.505</td>\n","      <td>0.400</td>\n","      <td>0.135</td>\n","      <td>0.7230</td>\n","      <td>0.3770</td>\n","      <td>0.1490</td>\n","      <td>0.178</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-807adb1f-af48-442b-a43f-d2aafd772162')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-807adb1f-af48-442b-a43f-d2aafd772162 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-807adb1f-af48-442b-a43f-d2aafd772162');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["\n","y_test[0:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2esfZTt_g6pq","executionInfo":{"status":"ok","timestamp":1668405037401,"user_tz":-330,"elapsed":53,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"e1e85300-2c48-44d2-fcad-57c38a71d065"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Age\n","1957  17.5\n","1238   9.5\n","3277  16.5\n","2111  10.5\n","2649   8.5"],"text/html":["\n","  <div id=\"df-9e1446af-450b-428a-ab11-e4dc75107505\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1957</th>\n","      <td>17.5</td>\n","    </tr>\n","    <tr>\n","      <th>1238</th>\n","      <td>9.5</td>\n","    </tr>\n","    <tr>\n","      <th>3277</th>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>2111</th>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>2649</th>\n","      <td>8.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e1446af-450b-428a-ab11-e4dc75107505')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9e1446af-450b-428a-ab11-e4dc75107505 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9e1446af-450b-428a-ab11-e4dc75107505');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["mlr.predict(x_test[0:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gZqs-V-7hB6j","executionInfo":{"status":"ok","timestamp":1668405037402,"user_tz":-330,"elapsed":53,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"cdac4333-d030-4c08-a85a-127211b2abc0"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[15.53831908],\n","       [ 8.69250731],\n","       [12.33347255],\n","       [ 8.94053076],\n","       [ 9.85983137],\n","       [13.11162417],\n","       [ 8.5778736 ],\n","       [12.08984937],\n","       [10.91753115],\n","       [10.64247071]])"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","r2_score(mlr.predict(x_test),y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pYKDQcmJhFWJ","executionInfo":{"status":"ok","timestamp":1668405037402,"user_tz":-330,"elapsed":49,"user":{"displayName":"Keerthana Balaji","userId":"10304492653136820394"}},"outputId":"d6bd7448-e403-4676-9a0c-069085c39fb6"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.10551972009791755"]},"metadata":{},"execution_count":78}]}]}